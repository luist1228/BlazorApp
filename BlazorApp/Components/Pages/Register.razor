@using static BlazorApp.Responses.CustomResponses

@page "/register"

@rendermode InteractiveServer

<div class=" container">
    <div class="row">
        <div class="col-sm-4">
            <h2>Register</h2>
            <EditForm Model="@register" OnValidSubmit="RegisterClicked" >
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label class="form-label">Email Address</label>
                    <InputText @bind-Value="register.Email" class="form-control"></InputText>
                </div>
                <div class="form-group">
                    <label class="form-label">Name</label>
                    <InputText @bind-Value="register.Name" class="form-control"></InputText>
                </div>
                <div class="form-group mt-3">
                    <label class="form-label">Password</label>
                    <InputText @bind-Value="register.Password"  class="form-control"></InputText>
                </div>
                <div class="form-group mt-3">
                    <label class="form-label">Confirm Password</label>
                    <InputText @bind-Value="register.ConfirmPassword"  class="form-control"></InputText>
                </div>
                <div class="form-group mt-3 ">
                    <button class="btn btn-primary" type="submit">Register</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    public RegisterDTO register = new();

    async Task RegisterClicked()
    {
        RegistrationResponse response = await accountService.RegisterAsync(register);

        if (!response.Flag)
        {
            await js.InvokeVoidAsync("alert", response.Message);
            return;
        }

        await js.InvokeVoidAsync("alert", response.Message);
        register = new();

        // NavManager.NavigateTo("/login", forceLoad: true);
        return;

    }
}
